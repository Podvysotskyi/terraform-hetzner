name: 'Terraform'

on:
 pull_request:
   branches: [main]

env:
  TF_LOG: INFO
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

jobs:
  check:
    name: 'Check Format'
    runs-on: ubuntu-latest

    defaults:
      run:
        shell: bash

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup Terraform with specified version on the runner
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: 1.3.0
    
    - name: Terraform format
      id: fmt
      run: terraform fmt -check

  validate:
    name: 'Validate'
    runs-on: ubuntu-latest
    environment: production

    defaults:
      run:
        shell: bash

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Terraform with specified version on the runner
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.3.0

      - name: Terraform init
        id: init
        run: terraform init

      - name: Terraform validate
        id: validate
        run: terraform validate

  plan:
    name: 'Plan'
    runs-on: ubuntu-latest
    environment: production

    needs: [check, validate]

    env:
      TF_VAR_CLOUDFLARE_DOMAIN: ${{ secrets.TF_VAR_CLOUDFLARE_DOMAIN }}
      TF_VAR_CLOUDFLARE_EMAIL: ${{ secrets.TF_VAR_CLOUDFLARE_EMAIL }}
      TF_VAR_CLOUDFLARE_TOKEN: ${{ secrets.TF_VAR_CLOUDFLARE_TOKEN }}
      TF_VAR_HETZNER_IP: ${{ secrets.TF_VAR_HETZNER_IP }}
      TF_VAR_HETZNER_USER: ${{ secrets.TF_VAR_HETZNER_USER }}
      TF_VAR_MYSQL_ROOT_PASSWORD: ${{ secrets.TF_VAR_MYSQL_ROOT_PASSWORD }}
      TF_VAR_POSTGRES_PASSWORD: ${{ secrets.TF_VAR_POSTGRES_PASSWORD }}
      TF_VAR_AUTHENTIK_POSTGRES_PASSWORD: ${{ secrets.TF_VAR_AUTHENTIK_POSTGRES_PASSWORD }}
      TF_VAR_AUTHENTIK_SECRET_KEY: ${{ secrets.TF_VAR_AUTHENTIK_SECRET_KEY }}
      TF_VAR_HOMARR_SECRET_KEY: ${{ secrets.TF_VAR_HOMARR_SECRET_KEY }}
      TF_VAR_HOMARR_AUTH_OIDC_CLIENT_ID: ${{ secrets.TF_VAR_HOMARR_AUTH_OIDC_CLIENT_ID }}
      TF_VAR_HOMARR_AUTH_OIDC_CLIENT_SECRET: ${{ secrets.TF_VAR_HOMARR_AUTH_OIDC_CLIENT_SECRET }}
      TF_VAR_CODER_POSTGRES_PASSWORD: ${{ secrets.TF_VAR_CODER_POSTGRES_PASSWORD }}
      TF_VAR_CODER_AUTH_OIDC_CLIENT_ID: ${{ secrets.TF_VAR_CODER_AUTH_OIDC_CLIENT_ID }}
      TF_VAR_CODER_AUTH_OIDC_CLIENT_SECRET: ${{ secrets.TF_VAR_CODER_AUTH_OIDC_CLIENT_SECRET }}

    defaults:
      run:
        shell: bash

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - uses: webfactory/ssh-agent@v0.9.0
      with:
        ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

    - name: Setup Terraform with specified version on the runner
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: 1.3.0

    - name: Terraform init
      id: init
      run: terraform init

    - name: Terraform plan
      id: plan
      run: terraform plan -no-color -input=false
