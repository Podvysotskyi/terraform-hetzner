name: 'Deploy'

on:
 push:
   branches: [main]

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest
    environment: production

    env:
      TF_VAR_CLOUDFLARE_DOMAIN: ${{ secrets.TF_VAR_CLOUDFLARE_DOMAIN }}
      TF_VAR_CLOUDFLARE_EMAIL: ${{ secrets.TF_VAR_CLOUDFLARE_EMAIL }}
      TF_VAR_CLOUDFLARE_TOKEN: ${{ secrets.TF_VAR_CLOUDFLARE_TOKEN }}
      TF_VAR_HETZNER_IP: ${{ secrets.TF_VAR_HETZNER_IP }}
      TF_VAR_HETZNER_USER: ${{ secrets.TF_VAR_HETZNER_USER }}
      TF_VAR_MYSQL_ROOT_PASSWORD: ${{ secrets.TF_VAR_MYSQL_ROOT_PASSWORD }}
      TF_VAR_POSTGRES_PASSWORD: ${{ secrets.TF_VAR_POSTGRES_PASSWORD }}
      TF_VAR_AUTHENTIK_POSTGRES_PASSWORD: ${{ secrets.TF_VAR_AUTHENTIK_POSTGRES_PASSWORD }}
      TF_VAR_AUTHENTIK_SECRET_KEY: ${{ secrets.TF_VAR_AUTHENTIK_SECRET_KEY }}

    defaults:
      run:
        shell: bash

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Setup Terraform with specified version on the runner
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.3.0

      - name: Terraform init
        id: init
        run: terraform init

      - name: Terraform plan
        id: plan
        run: terraform plan -no-color -input=false

      - name: Terraform Apply
        run: terraform apply -auto-approve -input=false
